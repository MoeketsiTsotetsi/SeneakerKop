@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-info" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> <i class="fas fa-user fa-lg"></i></a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-info">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-info" id="register" asp-area="Identity" asp-page="/Account/Register" alt="register"><i class="fa fa-registered"></i></a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-info" id="login" asp-area="Identity" asp-page="/Account/Login" alt="login"><i class="fa fa-sign-in fa-lg"></i></a>
    </li>
    
}
</ul>
